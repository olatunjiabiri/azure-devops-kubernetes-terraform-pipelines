trigger:
- main

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest

      steps:
    # - task: Docker@2
    #   displayName: Build an image
    #   inputs:
    #     command: build
    #     dockerfile: '$(Build.SourcesDirectory)/01-currency-exchange-microservice-basic/Dockerfile'
    #     tags: |
    #       $(tag)
    
      - task: CopyFiles@2
        inputs:
          SourceFolder: '$(System.DefaultWorkingDirectory)'
          Contents: '**/*.yaml'
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'manifests'
          publishLocation: 'Container'
#build
#build docker image
#push dcker out => 100
#copy files to staging
#publish

- stage: Deploy
  displayName: Deploy image
  jobs:
  - job: Deploy
    displayName: Deploy
    pool:
      vmImage: ubuntu-latest

      steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          buildType: 'current'
          artifactName: 'manifests'
          itemPattern: '**/*.yaml'
          targetPath: '$(System.ArtifactsDirectory)'
      - task: KubernetesManifest@0
        inputs:
          action: 'deploy'
          kubernetesServiceConnection: aws-kubernetes-cluster-service-connection
          namespace: 'default'
          manifests: '$(System.ArtifactsDirectory/configuration/kubernetes/deployment.yaml)'
          containers: 'olatunji12/currency-exchange-devops:$(tag)'

#deploy
#download
#image 100 => deploy to K8S
#apply kubectl apply -f deployment.yaml